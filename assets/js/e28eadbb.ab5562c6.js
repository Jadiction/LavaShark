"use strict";(self.webpackChunk_lavashark_website=self.webpackChunk_lavashark_website||[]).push([[174],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(t),m=o,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return t?r.createElement(f,i(i({ref:n},c),{},{components:t})):r.createElement(f,i({ref:n},c))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9364:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=t(7462),o=(t(7294),t(3905));const a={sidebar_position:3},i="Server configuration",s={unversionedId:"server-config",id:"server-config",title:"Server configuration",description:"you need to download the Lavalink node (lavalink-devs/Lavalink) and run it, or use other public nodes.",source:"@site/docs/server-config.md",sourceDirName:".",slug:"/server-config",permalink:"/docs/server-config",draft:!1,editUrl:"https://github.com/hmes98318/LavaShark/blob/main/apps/website/docs/server-config.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Getting started",permalink:"/docs/getting-started"},next:{title:"Classes",permalink:"/docs/category/classes"}},l={},u=[{value:"Deploying with Docker Compose",id:"deploying-with-docker-compose",level:2}],c={toc:u},p="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"server-configuration"},"Server configuration"),(0,o.kt)("p",null,"you need to download the Lavalink node (",(0,o.kt)("a",{parentName:"p",href:"https://github.com/lavalink-devs/Lavalink"},"lavalink-devs/Lavalink"),") and run it, or use other public nodes.  "),(0,o.kt)("h2",{id:"deploying-with-docker-compose"},"Deploying with Docker Compose"),(0,o.kt)("p",null,"docker-compose.yml"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},'version: "3.8"\n\nservices:\n    lavalink:\n        image: ghcr.io/lavalink-devs/lavalink:3 # pin the image version to Lavalink v3\n        container_name: lavalink\n        restart: unless-stopped\n        environment:\n            - _JAVA_OPTIONS=-Xmx6G # set Java options here\n            - SERVER_PORT=2333 # set lavalink server port\n            - LAVALINK_SERVER_PASSWORD=youshallnotpass # set password for lavalink\n        volumes:\n            - ./application.yml:/opt/Lavalink/application.yml # mount application.yml from the same directory or use environment variables\n            - ./plugins/:/opt/Lavalink/plugins/ # persist plugins between restarts, make sure to set the correct permissions (user: 322, group: 322)\n        networks:\n            - lavalink\n        expose:\n            - 2333 # lavalink exposes port 2333 to connect to for other containers (this is for documentation purposes only)\n        ports:\n            - 2333:2333 # you only need this if you want to make your lavalink accessible from outside of containers\nnetworks:\n    lavalink: # create a lavalink network you can add other containers to, to give them access to Lavalink\n        name: lavalink\n')),(0,o.kt)("p",null,"application.yml"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},'server: # REST and WS server\n  port: 2333\n  address: 0.0.0.0\nplugins:\n#  name: # Name of the plugin\n#    some_key: some_value # Some key-value pair for the plugin\n#    another_key: another_value\nlavalink:\n  plugins:\n#    - dependency: "group:artifact:version"\n#      repository: "repository"\n  server:\n    password: "youshallnotpass"\n    sources:\n      youtube: true\n      bandcamp: true\n      soundcloud: true\n      twitch: true\n      vimeo: true\n      http: true\n      local: false\n    filters: # All filters are enabled by default\n      volume: true\n      equalizer: true\n      karaoke: true\n      timescale: true\n      tremolo: true\n      vibrato: true\n      distortion: true\n      rotation: true\n      channelMix: true\n      lowPass: true\n    bufferDurationMs: 400 # The duration of the NAS buffer. Higher values fare better against longer GC pauses. Duration <= 0 to disable JDA-NAS. Minimum of 40ms, lower values may introduce pauses.\n    frameBufferDurationMs: 5000 # How many milliseconds of audio to keep buffered\n    opusEncodingQuality: 10 # Opus encoder quality. Valid values range from 0 to 10, where 10 is best quality but is the most expensive on the CPU.\n    resamplingQuality: LOW # Quality of resampling operations. Valid values are LOW, MEDIUM and HIGH, where HIGH uses the most CPU.\n    trackStuckThresholdMs: 10000 # The threshold for how long a track can be stuck. A track is stuck if does not return any audio data.\n    useSeekGhosting: true # Seek ghosting is the effect where whilst a seek is in progress, the audio buffer is read from until empty, or until seek is ready.\n    youtubePlaylistLoadLimit: 6 # Number of pages at 100 each\n    playerUpdateInterval: 5 # How frequently to send player updates to clients, in seconds\n    youtubeSearchEnabled: true\n    soundcloudSearchEnabled: true\n    gc-warnings: true\n    #ratelimit:\n      #ipBlocks: ["1.0.0.0/8", "..."] # list of ip blocks\n      #excludedIps: ["...", "..."] # ips which should be explicit excluded from usage by lavalink\n      #strategy: "RotateOnBan" # RotateOnBan | LoadBalance | NanoSwitch | RotatingNanoSwitch\n      #searchTriggersFail: true # Whether a search 429 should trigger marking the ip as failing\n      #retryLimit: -1 # -1 = use default lavaplayer value | 0 = infinity | >0 = retry will happen this numbers times\n    #youtubeConfig: # Required for avoiding all age restrictions by YouTube, some restricted videos still can be played without.\n      #email: "" # Email of Google account\n      #password: "" # Password of Google account\n    #httpConfig: # Useful for blocking bad-actors from ip-grabbing your music node and attacking it, this way only the http proxy will be attacked\n      #proxyHost: "localhost" # Hostname of the proxy, (ip or domain)\n      #proxyPort: 3128 # Proxy port, 3128 is the default for squidProxy\n      #proxyUser: "" # Optional user for basic authentication fields, leave blank if you don\'t use basic auth\n      #proxyPassword: "" # Password for basic authentication\n\nmetrics:\n  prometheus:\n    enabled: false\n    endpoint: /metrics\n\nsentry:\n  dsn: ""\n  environment: ""\n#  tags:\n#    some_key: some_value\n#    another_key: another_value\n\nlogging:\n  file:\n    path: ./logs/\n\n  level:\n    root: INFO\n    lavalink: INFO\n\n  request:\n    enabled: true\n    includeClientInfo: true\n    includeHeaders: false\n    includeQueryString: true\n    includePayload: true\n    maxPayloadLength: 10000\n\n\n  logback:\n    rollingpolicy:\n      max-file-size: 1GB\n      max-history: 30\n')))}d.isMDXComponent=!0}}]);